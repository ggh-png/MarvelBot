# http://wiki.ros.org/base_local_planner

# computing velocity commands to send to the mobile base
#TrajectoryPlannerROS:
#  max_vel_x: 0.3
#  min_vel_x: 0.05
#  max_vel_theta: 1.0
#  min_in_place_vel_theta: 0.2

#  acc_lim_theta: 1
#  acc_lim_x: 1
#  acc_lim_y: 0

#  holonomic_robot: false

DWAPlannerROS:
  acc_lim_x: 1
  acc_lim_y: 0
  acc_lim_th: 1

  # The absolute value of the maximum translational velocity for the robot in m/s 
  max_vel_trans: 1
  min_vel_trans: 0.1

  max_vel_x: 1
  min_vel_x: -0.1 # The minimum x velocity for the robot in m/s, negative for backwards motion. 
  max_vel_y: 0
  min_vel_y: 0
  # The absolute value of the maximum rotational velocity for the robot in rad/s 
  max_vel_theta: 0.9
  min_vel_theta: 0.3

  # Goal Tolerance Parameters
  # The tolerance in radians for the controller in yaw/rotation when achieving its goal 
  yaw_goal_tolerance: 0.1
  # The tolerance in meters for the controller in the x & y distance when achieving a goal 
  xy_goal_tolerance: 0.1
  # if goal tolerance is latched, if the robot ever reaches the goal xy location it will simply rotate in place,
  # even if it ends up outside the goal tolerance while it is doing so. 
  latch_xy_goal_tolerance: true

  # Forward Simulation Parameters
  # The frequency at which this controller will be called in Hz. 
  controller_frequency: 10
  # The amount of time to forward-simulate trajectories in seconds 
  sim_time: 1.7
  # The step size, in meters, to take between points on a given trajectory 
  sim_granularity: 0.025
  # The number of samples to use when exploring the x velocity space 
  vx_samples: 3
  vy_samples: 0
  vth_samples: 20

  # Trajectory Scoring Parameters 
  # 각 궤적을 점수 매기는 데 사용되는 비용 함수 cost =
  # path_distance_bias * (distance to path from the endpoint of the trajectory in meters)
  # + goal_distance_bias * (distance to local goal from the endpoint of the trajectory in meters)
  # + occdist_scale * (maximum obstacle cost along the trajectory in obstacle cost (0-254))

  # The weighting for how much the controller should stay close to the path it was given 
  path_distance_bias: 32.0
  # The weighting for how much the controller should attempt to reach its local goal, also controls speed 
  goal_distance_bias: 24.0
  # The weighting for how much the controller should attempt to avoid obstacles 
  occdist_scale: 0.01
  # 로봇의 중앙점으로부터 추가 점수 매기기까지의 거리(미터)
  forward_point_distance: 0.325
  # 궤적이 유효한 것으로 간주되기 위해 로봇이 충돌 전에 정지해야 하는 시간(초)
  stop_time_buffer: 0.2
  scaling_speed: 0.25
  max_scaling_factor: 0.2
  publish_cost_grid: false


  # How far the robot must travel in meters before oscillation flags are reset 
  oscillation_reset_dist: 0.1

  # Global Plan Parameters
  # Defines whether or not to eat up the plan as the robot moves along the path. 
  # If set to true, points will fall off the end of the plan once the robot moves 1 meter past them. 
  prune_plan: true